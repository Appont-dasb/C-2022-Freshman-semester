//introductions
# This is a basic workflow to help you get started with Actions

name: solve exam2022_problem

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.



//Distinguish between sizeof and strlen
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
int main()
{
	char arr1[] = "abc" ;
	char arr2[] = {'a','b','c',0};
	printf("%d\n",strlen(arr1)); //output:3
	printf("%d\n",sizeof(arr1)); //output:4
  
  //why ?
	//For strlen, '0' is not counted towards the string length
	//However, for sizeof, the string length is still counted

	return 0;
}


If arr1 does not contain a 0.
#include<stdio.h>
#include<string.h>
int main()
{
	char arr1[] = "abc" ;
	char arr2[] = {'a','b','c'};
	printf("%d\n",strlen(arr1)); //output:3
	printf("%d\n",sizeof(arr1)); //output:Random value
	it will be random value .
	
        return 0 ;
  }

'\0'是字符串结束的标志，不算做字符串的内容



//The job task before that
//Item A job
//Binary one-time equations（二元一次方程）
#include<stdio.h>
#include<math.h>
int main ()
{
	float a,b,c;
	float x1,x2;
	float A,B,C,D;
	scanf("%f%f%f",&a,&b,&c);
	A=sqrt(b*b-4*a*c); //deta:∆
	B=(-b+A);
	C=(-b-A);
	D=2*a;
	x1=B/D;
	x2=C/D; //The values of the two solutions
	printf("x1=%.2f,x2=%.2f",x1,x2); //Prints out the results
	return 0;
}


Class notes
#include<stdio.h>
int main()
{
	int a,b;
	scanf("%d",&a);
	if (a)
	{
		a=2;
		b=3;
	}
	else if(a==0)  //a这里得有==
	{
		b=2;
	}else 
	{
		b=1;
	}
	printf("%d",b);
	return 0;
}


Practice
#include<stdio.h>
int main()
{
	float h = 0.15 ;
	int n = 0 ;

	while(h<=8844000)
	{
		h=2*h;
		n=n+1;
	}
	printf("%d",n) ;
	return 0;
}


//悬空else
//注意加{}
//代码要规范
Branch (select) statements
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
int main()
{
	int a = 0 ;
	int b = 2 ;
	if(a == 1)
		if(b == 2)
			printf("hehe\n");
		else
			printf("haha\n"); 
			//无论这里的else和第一个if对齐还是与第二个if对齐，结果均一样
			//else只会和与他距离最近的If发挥作用
	return 0;
}


//EOF
//EOF = end of file ->值-1
#include<stdio.h>

int main()
{
	int ch = 0 ;
	// when you input:ctrl + Z ,it will be over .
	while((ch=getchar())!=EOF)
	{
		putchar(ch) ;
	}
 return 0;
 
}


//do-while
//输入密码程序
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

int main()
{


	int ch = 0 ;
	int cet = 0 ;
	char password[16] = {0};
	printf("请输入密码：\n");
	scanf("%s",password);

	while((ch=getchar())!='\n')
	{
		;
	}
        // 缓冲区还剩一个'\n'
	// 读取下'\n'
	printf("请确认密码(Y\\N)：\n"); // 两个\\
	cet = getchar() ; // Y/N
	do
	{
		
	if(cet == 'Y')
	{
		printf("确认成功\n");
		break;
	}
	else if(cet =='N')
	{
		printf("请再次输入密码：\n");
		
	    scanf("%s",password);
		while((ch=getchar())!='\n')
	{
		;
	}
		printf("请再次确认密码(Y\\N)：\n");
		cet = getchar(); //这里如若输入N，则将循环下去，直到密码确认成功。

	}
	}while(cet != 'Y'); //先循环再判断
	return 0;
}
